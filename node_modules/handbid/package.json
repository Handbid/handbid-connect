{
  "name": "handbid",
  "version": "0.0.77",
  "description": "Library to connect to an auction in Handbid.",
  "main": "handbid.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "chai": "^1.9.1",
    "request": "^2.37.0",
    "should": "^4.0.4",
    "socket.io-client": "^0.9.17"
  },
  "devDependencies": {},
  "scripts": {
    "test": ""
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Handbid/Handbid-Js.git"
  },
  "keywords": [
    "handbid",
    "handbid Connect",
    "Handbid JS"
  ],
  "author": {
    "name": "Handbid"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Handbid/Handbid-Js/issues"
  },
  "homepage": "https://github.com/Handbid/Handbid-Js",
  "readme": "#Handbid-Js\n\nI am the `Handbid` library. I work in both [nodejs](http://nodejs.org) && in the browser. I rely on [chai](http://chaijs.com)\nfor my tests. To be honest, I've never run any unit tests in the browser, someone should figure out how to do that. =)\n\n##Lifecycle\nConnecting to an auction in Handbid is a multi-step process. It's pretty simple though, here is a breakdown:\n\n1. Instantiate new Handbid instance: `var hb = new Handbid()`\n1. Connect to the `main` server by invoking: `hb.connect();`\n1. Connect to any auction by key by invoking: `hb.connectToAuction('any-auction-key');`\n1. Listen for auction connection: `hb.on('did-connect-to-auction', function (e) { console.log(e.get('auction')); });`\n\nYou can invoke `connectToAuction()` immediately after `connect()` (you don't have to wait for the main connection to be established).\n\n##Examples\nHere are some code samples to get you started!\n\n###Nodejs\n```bash\n$npm install handbid\n```\n\n```js\n\nvar Handbid = require('handbid'),\n    hb      = new Handbid();\n\nhb.connect();\nhb.connectToAuction('auction key');\n\n//from this point it's exactly the same as the browser examples.\n\n```\n\n###Browser\n```html\n\n<script type='text/javascript' src='https://handbid-js-handbid.netdna-ssl.com/handbid.js'></script>\n\n<script type=\"text/javascript\">\n\n    /**\n     * From the browser, a few operations are automatically performed for you. They are as follows:\n     *\n     * window.handbid = new Handbid();\n     * window.handbid.connect();\n     *\n     * So, automatically, you will be connected to the main Handbid server. But, you will not be able to listen in on any\n     * fancy update events. For\n     */\n    handbid.connectToAuction('handbid-demo-auction');\n    handbid.on('did-connect-to-auction', function (e) {\n\n        var auction = e.get('auction');\n\n        auction.on('did-update-item', function (e) {\n\n            var itemKey = e.get('key'),\n                changes = e.get('changes');\n\n            console.log('the following was changed:', changes, 'on item with key:', itemKey);\n\n        });\n\n        auction.on('did-update', function (e) {\n\n            console.log(e);\n\n        });\n\n    });\n\n\n</script>\n\n```\n\n###Authentication\n\n\n##Events\nUnder each event name is a description of the data passed with the event. This event is the single object passed to a\nlistener of any event.\n\n```js\n\nhb.on('did-connect-to-server', function (e) {\n\n    console.log(e.data); //will output everything in the event\n    console.log(e.get('url')); //use this rather than e.data.url because get() allows for a default value\n\n    if(e.get('anything', false)) {\n\n\n    }\n\n});\n\n```\n\n`Handbid`\n\n- `did-connect-to-server`: when a server connection is made after invoking `hb.connect()`\n    - `handbid`: instance that dispatched the event\n    - `url`: the url we connected to\n- `did-connect-to-auction`: dispatched after `hb.connectToAuction('auction-key')`\n    - `handbid`: instance that dispatched the event\n    - `auction`: the auction we connected to\n- `did-receive-message`: whenever the current user gets a message\n    - `message`: text of message that was sent\n- `error`: anytime any error occurs\n\n##Handbid API\n- `\n\n##Connect Button\nThrowing in a connect button is wicked easy!\n\n```html\n\n<a href=\"#\" data-handbid-connect data-handbid-pass=\"http://mywebsite.com/where/on/success\" data-handbid-fail=\"http://mywebsite.com/where/on/fail\">\n    <img src=\"assets/btn-hb-blue-big.png\" />\n</a>\n```",
  "readmeFilename": "README.md",
  "gitHead": "b63a0270117e0b70f6364c08c61cedb8782ed00e",
  "_id": "handbid@0.0.77",
  "_shasum": "532ba6159db6b937c8f2f7c604bc33a65ede9892",
  "_from": "handbid@0.0.77"
}
